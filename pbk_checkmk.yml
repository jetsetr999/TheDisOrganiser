- name: Create or ensure EC2 resources exist
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    instance_name: disorganizer
    key_name: ITM350
    security_group_name: disorganized-sg
    instance_type: t2.micro
    region: us-east-1
    tag_name: disorganized
  roles:
    - pro_build


- name: Deploy Checkmk Container
  hosts: dynamic_ec2
  become: yes
  vars:
    ansible_user: admin
    ansible_ssh_private_key_file: ~/.ssh/id_rsa
    ansible_ssh_common_args: '-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
    checkmk_image: "checkmk/check-mk-raw:2.2.0-latest"
    container_name: "checkmk_monitoring"
    web_port: 8080
    agent_port: 8000
  roles:
    - pro_checkmk

  # tasks:
  #   - name: Install Docker dependencies
  #     apt:
  #       name: 
  #         - docker.io
  #         - docker-compose
  #       update_cache: yes
  #       state: present

  #   - name: Create persistent data directory
  #     file:
  #       path: /opt/checkmk_data
  #       state: directory
  #       mode: '0755'

  #   - name: Pull Checkmk Docker image
  #     docker_image:
  #       name: "{{ checkmk_image }}"
  #       source: pull

  #   - name: Deploy Checkmk container
  #     docker_container:
  #       name: "{{ container_name }}"
  #       image: "{{ checkmk_image }}"
  #       state: started
  #       restart_policy: always
  #       volumes:
  #         - "/opt/checkmk_data:/omd/sites"
  #       ports:
  #         - "{{ web_port }}:5000/tcp"
  #         - "{{ agent_port }}:8000/tcp"
  #       tmpfs:
  #         - "/opt/omd/sites/cmk/tmp:uid=1000,gid=1000"

  #   - name: Set Checkmk admin password
  #     community.docker.docker_container_exec:
  #       container: "{{ container_name }}"
  #       command: |
  #         omd su cmk -c 'cmk-passwd cmkadmin -i <<EOF
  #         swordfish
  #         swordfish
  #         EOF'


# - name: checkmk
#   hosts: dynamic_ec2
#   become: true
#   vars:
#     ansible_user: admin
#     ansible_ssh_private_key_file: ~/.ssh/id_rsa
#     ansible_ssh_common_args: '-o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
#     checkmk_version: "2.3.0p29"
#     checkmk_package: "check-mk-raw-2.3.0p29_0.noble_amd64.deb"
#     checkmk_url: "https://download.checkmk.com/checkmk/{{ checkmk_version }}/{{ checkmk_package }}"
#     pubkey_url: "https://download.checkmk.com/checkmk/Check_MK-pubkey.gpg"
#     download_dir: "/home/admin"
#   roles:
#     - pro_checkmk